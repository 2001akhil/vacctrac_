


<head>
      <meta charset="UTF-8">
      <link rel="stylesheet" href="stylesheets/next.css">
      <meta http-equiv="X-UA-Compatible" content="IE=edge">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Document</title>
</head>

<body>
     
      
      <div class="formbold-main-wrapper">
            <form action="/vaccine" method="POST">

                  
           
            
                  <div class="formbold-mb-3">
                        <label for="name" class="formbold-form-label"> Name of the Vaccine </label>
                        <input type="text" name="name" id="name" {{#if details}}{{#each details}}value="{{this.vaccinename}}" {{/each}}{{else}} value="" {{/if}}class="formbold-form-input"/>
                  </div>

                  <div class="formbold-mb-31">
                        <label for="id1" class="formbold-form-label"> Vaccine ID </label>
                        <input type="text" name="id1" id="id1" {{#if details}}{{#each details}}value="{{this.Vaccine_id}}"{{/each}}{{else}}value="" {{/if}} class="formbold-form-input"/>
                  </div>

                  <div class="formbold-mb-32">
                        <label for="dob" class="formbold-form-label"> Date of Manufacturing </label>
                        <input type="text" name="dob" id="dob" {{#if details}}{{#each details}} value="{{this.Manufact_d}}"{{/each}} {{else}} value=""{{/if}} class="formbold-form-input"/>
                  </div>

                  <div class="formbold-mb-33">
                        <label for="dobb" class="formbold-form-label"> Date of Expiry </label>
                        <input type="text" name="dobb" id="dobb"   class="formbold-form-input"/>
                  </div>

                  <div class="formbold-mb-34">
                        <label for="temp" class="formbold-form-label"> Temperature(in degrees) </label>

                        <input type="text" value="{{datatemp}}" name="temp"  id="temp" class="formbold-form-input formbold-mb-3"/>
                  </div>
                  <div class="formbold-mb-35">
                        <label for="temp" class="formbold-form-label"> Available Units </label>
                  
                        <input type="text" name="units" id="units" class="formbold-form-input formbold-mb-3" />
                  </div>
                  <div class="button-wrapper">
                  <button class="button2"  onclick="window.location.href='slot.html'">GO BACK </button>
                  <button class="formbold-btn">SUBMIT</button>
                 </div>
            </form>
      </div>
      </div>
     
</body>

<script> 
      const Web3 = require('web3');

           
            const web3 = new Web3(Web3.givenProvider || 'http://localhost:3001');

            const contractABI = [
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "vacccount",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "vaccname",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "manuname",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "location",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "temperature",
				"type": "string"
			}
		],
		"name": "addBox",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "box",
		"outputs": [
			{
				"internalType": "string",
				"name": "vacccount",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "vaccname",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "manuname",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "location",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "temperature",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "id",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];
            const contractAddress = '0xD7ACd2a9FD159E69Bb102A1ca21C9a3e3A5F771B';

            
            const contract = new web3.eth.Contract(contractABI, contractAddress);

            contract.methods.insertData(vaccineName, vaccineID, dateOfExp, temperature, availableUnits)
                  .send({ from: })/* insert sender address here */ 
                  .on('receipt', (receipt) => {
                        console.log('Data inserted onto the blockchain:', receipt);
                  });
     
      </script>

